/*
writer : "vibhu sharma"
*/
#include<bits/stdc++.h>
using namespace std;
#define int long long  int 
#define endl "\n"
#define rep(i,n) for(int i=0;i<n;i++)
#define repr(i,n) for(int i=n-1;i>=0;i++)
#define repk(i,k,n) for(int i=k;i<n;i++)
#define M1 1000000007
#define M2 998244353
#define F first;
#define S second;
#define deb(x) cout << #x << "=" << x<<endl;
#define pb push_back
#define tr(it ,a) for (auto it : a)
#define all(x) x.begin(),x.end()
#define sortall(x) sort(all(x))
#define PI  3.1415926538979
#define fastm_fast ios_base::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL)
#define show2(a,r,c) for(int i=0;i<r;i++){cout<<endl;for(int j=0;j<c;j++) cout << a[i][j] << " ";  } ;
#define show(a,n) rep(i,n)cout << a[i] << " "; cout << '\n';
typedef pair<int ,int > pii;
typedef vector<int> vi;
typedef vector<pii> vpii; 
const int  mod = 1e9 + 7;
const int MAX = 2e5+5;
const int  N =3e5+10;
// int a[N];


void solve()
{
int n,c1=0,c0=0;
string a,b;
cin>>n;

cin>>a>>b;
// cout <<a<<" "<<b  << '\n';

rep(i,n)
{
    if(a[i]=='0')
        c0++;
    else c1++;
}


int count=0;
for(int i=n-1;i>=0;i--)
{
    // checking reverciblity
    if(count>0)
    {
        if(count%2==0)
        {
            a[i]=a[i];
        }
        else{
            if(a[i]=='0')
                a[i]='1';
            else
                a[i]='0';
        }
    }

    //
    if(a[i]!=b[i])

    {
        if(c1==c0)
        {
            count+=1;
            a[i]=b[i];

        }
        else
        {

            cout << "NO" << '\n';
            return ;
        }
    }
    if(a[i]=='0')
        c0-=1;
    else if(a[i]=='1')
        c1-=1;


}
cout << "YES" << '\n';


}


int32_t   main(){
  fastm_fast;

#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);  
#endif
    int t=1;
     cin>>t;
    while(t--)
    {
       #ifndef ONLINE_JUDGE
           cout << "Case #"<< t<< ":\n";
       #endif
       solve();
   }
    #ifndef ONLINE_JUDGE
    cout<<"\nTime Elapsed: " << 1.0*clock() / CLOCKS_PER_SEC << " sec\n";
#endif
    return 0;
}